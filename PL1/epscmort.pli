
      /* Declarations */
      DECLARE W_FLAGS CHAR(1);
      DECLARE W_SEND_FLAG FIXED BINARY (1);
      DECLARE SEND_ERASE FIXED BINARY (1) INIT(1);
      DECLARE SEND_DATAONLY FIXED BINARY (1) INIT(2);
      DECLARE SEND_MAPONLY FIXED BINARY (1) INIT(3);
      DECLARE SEND_DATAONLY_ALARM FIXED BINARY (1) INIT(4);
      DECLARE SEND_ALL FIXED BINARY (1) INIT(5);
      
      DECLARE W_CONVERSIONS CHAR(12);
      DECLARE W_PMT_NUMBER FIXED DECIMAL (11, 2);
      DECLARE WS_FORMAT_NUMBER CHAR(12);
      DECLARE W_PRINC_NUMBER FIXED DECIMAL (11, 2);
      
      DECLARE W_CALL_PROGRAM CHAR(8);
      DECLARE W_RETIREMENT_WA FIXED BINARY (15);
      DECLARE W_COMAREA_LENGTH FIXED BINARY (15);
      DECLARE SQL_ERROR_MSG CHAR(16) INIT('SQL ERROR: ');
      DECLARE SQL_ERROR_CODE FIXED BINARY (15);
      
      DCL IBMREQD CHAR(1);
      
      DCL END_OF_TRANS_MSG CHAR(30) INIT('END OF TRANSACTION - THANK YOU');
      DCL BLANK_MSG CHAR(1) INIT(' ');
      DCL EIBCALEN FIXED BINARY (15);
      DCL EIBAID CHAR(4);
      DCL PROCESS_INDICATOR CHAR(1);
      DCL EPMENUO CHAR(1);
      DCL MSGERRO CHAR(12);
      DCL DFHCOMMAREA CHAR(100);
      DCL EPMENUI CHAR(1);
      DCL EPLOANI CHAR(12);
      DCL EPYEARSI CHAR(12);
      DCL EPRATEI CHAR(12);
      DCL EPSPARM_VALIDATE_DATA CHAR(12);
      DCL EPSPARM_MAX_LENGTH FIXED BINARY (15);
      DCL EPS_NUMBER_VALIDATION CHAR(8);
      DCL EPSPARM_NUMBER FIXED DECIMAL (11, 2);
      DCL EPSPARM_DECIMAL FIXED DECIMAL (2);
      DCL EPSPCOM_PRINCIPLE_DATA FIXED DECIMAL (11, 2);
      DCL EPSPCOM_NUMBER_OF_YEARS FIXED DECIMAL (11, 2);
      DCL EPSPCOM_QUOTED_INTEREST_RATE FIXED DECIMAL (11, 2);
      DCL EPSPCOM_YEAR_MONTH_IND CHAR(1);
      DCL EPPAYMNTO CHAR(12);
      DCL EPSPCOM_RETURN_MONTH_PAYMENT FIXED DECIMAL (11, 2);
      
      /* Main Procedure */
      EPSCMORT: PROC OPTIONS(MAIN);
      DECLARE W_COMMUNICATION_AREA CHAR(100);
      
      EPSCMORT_MAINLINE: PROCEDURE OPTIONS(MAIN);
          CALL A805_DUMMY_SQL_CALL();
          W_COMAREA_LENGTH = LENGTH(DFHCOMMAREA);
          W_COMMUNICATION_AREA = DFHCOMMAREA;
          SELECT;
              WHEN (EIBCALEN = 0) DO;
                  EPMENUO = LOWVAL(EPMENUO);
                  SEND_ERASE = TRUE;
                  CALL A300_SEND_MAP();
                  PROCESS_INDICATOR = '3';
              END;
              WHEN (EIBAID = 'CLEAR') DO;
                  EPMENUO = LOWVAL(EPMENUO);
                  SEND_ERASE = TRUE;
                  CALL A300_SEND_MAP();
              END;
              WHEN (EIBAID = 'PF3' | EIBAID = 'PF12') DO;
                  IF (PROCESS_INDICATOR = '3') THEN;
                      CALL LINK('EPSP');
                  ELSE;
                      SEND_ALL = TRUE;
                      CALL A300_SEND_MAP();
                      PROCESS_INDICATOR = '3';
                  END;
              END;
              WHEN (EIBAID = 'PF9') DO;
                  PROCESS_INDICATOR = '9';
                  CALL LINK(W_CALL_PROGRAM) (W_COMMUNICATION_AREA);
              END;
              WHEN (EIBAID = 'ENTER') DO;
                  IF (PROCESS_INDICATOR = '3') THEN;
                      CALL A100_PROCESS_MAP();
                  ELSE;
                      CALL LINK('EPSMLIST') (W_COMMUNICATION_AREA);
                  END;
              END;
              OTHERWISE DO;
                  IF (PROCESS_INDICATOR = '3') THEN;
                      CALL A600_CALCULATE_MORTGAGE();
                      RETURN;
                  END;
              END;
          END; /* End of SELECT */
      END EPSCMORT_MAINLINE;
      
      A100_PROCESS_MAP: PROCEDURE;
          CALL A400_RECEIVE_MAP();
          CALL A600_CALCULATE_MORTGAGE();
          SEND_DATAONLY = TRUE;
          CALL A300_SEND_MAP();
      END A100_PROCESS_MAP;
      
      A300_SEND_MAP: PROCEDURE;
          SELECT;
              WHEN (SEND_MAPONLY) DO;
                  SEND ('EPMENU') MAP ('EPSMORT') MAPONLY CURSOR;
              END;
              WHEN (SEND_ERASE) DO;
                  SEND ('EPMENU') MAP ('EPSMORT') FROM (EPMENUO) ERASE CURSOR;
              END;
              WHEN (SEND_DATAONLY) DO;
                  SEND ('EPMENU') MAP ('EPSMORT') FROM (EPMENUO) DATAONLY CURSOR;
              END;
              WHEN (SEND_ALL) DO;
                  SEND ('EPMENU') MAP ('EPSMORT') FROM (EPMENUO);
              END;
          END; /* End of SELECT */
      END A300_SEND_MAP;
      
      A400_RECEIVE_MAP: PROCEDURE;
          RECEIVE ('EPMENU') MAP ('EPSMORT') INTO (EPMENUI);
          EPLOANI = EPMENUI;
          EPSPARM_MAX_LENGTH = LENGTH(EPLOANI);
          CALL 'EPSNBRVL' (EPS_NUMBER_VALIDATION);
          EPSPCOM_PRINCIPLE_DATA = EPSPARM_NUMBER + EPSPARM_DECIMAL;
          EPYEARSI = EPMENUI;
          EPSPARM_MAX_LENGTH = LENGTH(EPYEARSI);
          CALL 'EPSNBRVL' (EPS_NUMBER_VALIDATION);
          EPSPCOM_NUMBER_OF_YEARS = EPSPARM_NUMBER + EPSPARM_DECIMAL;
          EPRATEI = EPMENUI;
          EPSPARM_MAX_LENGTH = LENGTH(EPRATEI);
          CALL 'EPSNBRVL' (EPS_NUMBER_VALIDATION);
          EPSPCOM_QUOTED_INTEREST_RATE = EPSPARM_NUMBER + EPSPARM_DECIMAL;
      END A400_RECEIVE_MAP;
      
      A600_CALCULATE_MORTGAGE: PROCEDURE;
          EPSPCOM_YEAR_MONTH_IND = 'Y';
          CALL LINK('EPSCSMRT') (W_COMMUNICATION_AREA);
          EPPAYMNTO = EPSPCOM_RETURN_MONTH_PAYMENT;
          MSGERRO = EPSPCOM_ERRMSG;
      END A600_CALCULATE_MORTGAGE;
      
      A805_DUMMY_SQL_CALL: PROCEDURE;
          EXEC SQL
              SELECT IBMREQD
                  INTO :IBMREQD
                  FROM SYSIBM.SYSDUMMY1;
          END;
      END A805_DUMMY_SQL;